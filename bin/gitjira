#!/usr/bin/env python

#################################################################################
#
#    Copyright 2013 Jairam Chandar
#  
#    This file is part of GitJira.
#
#    GitJira is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    GitJira is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with GitJira.  If not, see <http://www.gnu.org/licenses/>.
#
#################################################################################

import sys, os, getpass
import gitjira

from os.path import expanduser
home = expanduser("~")

def usage():
	return "git-jira [help | <command> [<args>]]\n" + \
	"Commands - \n" + \
	"- create_branch <ticket_number>\n" + \
	"- commit_branch\n"

confLocation = home + "/.config/gitjira"
confFile = confLocation + "/config"

if (not os.path.exists(confFile)):
	sys.stdout.write("Configuration required to proceed. Create config? [y/n]")
	proceed = raw_input().lower()
	if (proceed != 'y'):
		sys.exit(0)

	if (not os.path.exists(confLocation)):
		os.mkdir(confLocation)
	sys.stdout.write("Username: ")
	username = raw_input()
	password = getpass.getpass("Password: ")
	sys.stdout.write("Base Jira Url (eg. https://jira.atlassian.net): ")
	baseUrl = raw_input()

	userhash = gitjira.createUserHash(username, password)

	f = open(confFile, 'w')
	f.write("userhash=" + userhash + "\n")
	f.write("base_url=" + baseUrl)
	f.close()

if (len(sys.argv) < 2 or sys.argv[1] == 'help'):
	print usage()
	sys.exit(1)

if (sys.argv[1] == 'create_branch' and len(sys.argv) == 3):
	gitjira.createBranch(sys.argv[2])
elif(sys.argv[1] == 'commit_branch'):
	gitjira.commitBranch()
